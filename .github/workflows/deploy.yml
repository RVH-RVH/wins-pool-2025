name: Migrate DB + Deploy (Vercel)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: production-deploy
  cancel-in-progress: true

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      - run: npx prisma generate

      # ✅ Fail early if secrets aren't present
      - name: Verify DB envs
        shell: bash
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL:   ${{ secrets.DIRECT_URL }}
        run: |
          [ -n "$DATABASE_URL" ] || { echo "DATABASE_URL secret is missing"; exit 1; }
          [ -n "$DIRECT_URL" ]   || { echo "DIRECT_URL secret is missing"; exit 1; }
          echo "DB envs present ✅"

      # ✅ Run migrations; Prisma validates schema and needs BOTH envs defined
      - name: Prisma migrate deploy (Supabase)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}   # pooled (6543)
          DIRECT_URL:   ${{ secrets.DIRECT_URL }}     # direct (5432)
        run: npx prisma migrate deploy

  vercel-deploy:
    needs: migrate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npx prisma generate
      - name: Build (optional)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL:   ${{ secrets.DIRECT_URL }}
        run: npm run build
      - name: Deploy to Vercel (prod)
        env:
          VERCEL_TOKEN:     ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID:    ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID:${{ secrets.VERCEL_PROJECT_ID }}
          DATABASE_URL:     ${{ secrets.DATABASE_URL }}
          DIRECT_URL:       ${{ secrets.DIRECT_URL }}
        run: npx vercel --token "$VERCEL_TOKEN" --prod --confirm


